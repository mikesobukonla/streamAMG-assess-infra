name: Deploy StreamAMG Platform

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    environment: production
    permissions:
      id-token: write   # Required for OIDC auth
      contents: read    # For code checkout

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/GitHubActions-DeployRole
          aws-region: ${{ vars.AWS_REGION }}
          role-session-name: github-${{ github.run_id }}
          role-duration-seconds: 3600

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init -backend-config="bucket=${{ vars.TF_STATE_BUCKET }}" -backend-config="key=environments/production/terraform.tfstate"

      - name: Terraform Format
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: |
          terraform plan \
            -var="environment=production" \
            -out=tfplan
        continue-on-error: false

      - name: Terraform Apply
        if: github.ref == 'refs/heads/main'
        run: terraform apply tfplan

      - name: Extract Outputs for CI/CD
        id: outputs
        run: |
          echo "ALB_DNS=$(terraform output -raw alb_dns_name)" >> $GITHUB_OUTPUT
          echo "ECS_SERVICE=$(terraform output -raw ecs_service_name)" >> $GITHUB_OUTPUT

      - name: Smoke Test
        run: |
          curl -sSf https://${{ steps.outputs.outputs.ALB_DNS }}/health \
            -H "Authorization: Bearer ${{ secrets.API_TEST_TOKEN }}"